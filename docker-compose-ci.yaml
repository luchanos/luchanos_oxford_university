version: "3.0"
services:
  db:
    container_name: "db"
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    networks:
      - custom
  luchanos_oxford_university_app:
    container_name: luchanos_oxford_university_app
    image: luchanos_oxford_university_app # Specify the name of the Docker image to be built
    environment:
      REAL_DATABASE_URL: "postgresql+asyncpg://postgres:postgres@db:5432/postgres"
      SENTRY_URL: "https://2d340f23a0454ea0a23a0d2d6fbe2e1f@o4504938483875840.ingest.sentry.io/4504939751538688"
      APP_PORT: "8000"
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    networks:
      - custom
  prometheus:
    depends_on:
      - luchanos_oxford_university_app
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - custom
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./grafana_storage:/var/lib/grafana
    depends_on:
      - prometheus
    restart: always
    networks:
      - custom
    user: "0"
networks:
  custom:
    driver: bridge
